% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Simulation.R
\name{Simulation}
\alias{Simulation}
\title{Simulation class}
\description{
Class for running a simulation and getting results.
}
\details{
The \code{Simulation} class is used to set up and run a daily
  simulation over a particular period. Portfolio construction parameters and
  other simulator settings can be configured in a yaml file that is passed to
  the object's constructor. See the package vignette for information on
  configuration file setup.
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Simulation$new()}}
\item \href{#method-setVerbose}{\code{Simulation$setVerbose()}}
\item \href{#method-setShinyCallback}{\code{Simulation$setShinyCallback()}}
\item \href{#method-getSecurityReference}{\code{Simulation$getSecurityReference()}}
\item \href{#method-run}{\code{Simulation$run()}}
\item \href{#method-getSimDates}{\code{Simulation$getSimDates()}}
\item \href{#method-getSimSummary}{\code{Simulation$getSimSummary()}}
\item \href{#method-getSimDetail}{\code{Simulation$getSimDetail()}}
\item \href{#method-getPositionSummary}{\code{Simulation$getPositionSummary()}}
\item \href{#method-getInputStats}{\code{Simulation$getInputStats()}}
\item \href{#method-getLooseningInfo}{\code{Simulation$getLooseningInfo()}}
\item \href{#method-getOptimizationSummary}{\code{Simulation$getOptimizationSummary()}}
\item \href{#method-getExposures}{\code{Simulation$getExposures()}}
\item \href{#method-getDelistings}{\code{Simulation$getDelistings()}}
\item \href{#method-getSingleStrategySummaryDf}{\code{Simulation$getSingleStrategySummaryDf()}}
\item \href{#method-plotPerformance}{\code{Simulation$plotPerformance()}}
\item \href{#method-plotMarketValue}{\code{Simulation$plotMarketValue()}}
\item \href{#method-plotCategoryExposure}{\code{Simulation$plotCategoryExposure()}}
\item \href{#method-plotFactorExposure}{\code{Simulation$plotFactorExposure()}}
\item \href{#method-plotNumPositions}{\code{Simulation$plotNumPositions()}}
\item \href{#method-overallStatsDf}{\code{Simulation$overallStatsDf()}}
\item \href{#method-print}{\code{Simulation$print()}}
\item \href{#method-writeFeather}{\code{Simulation$writeFeather()}}
\item \href{#method-readFeather}{\code{Simulation$readFeather()}}
\item \href{#method-clone}{\code{Simulation$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a new \code{Simulation} object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Simulation$new(
  config,
  raw_input_data = NULL,
  raw_pricing_data = NULL,
  security_reference_data = NULL,
  delisting_dates_data = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{config}}{An object of class \code{list} or \code{character}. If the
value passed is a character vector, it should be of length 1 and
specify the path to a yaml configuration file that contains the
object's configuration info. If the value passed is of class list(),
the list should contain the object's configuration info in list form
(e.g, the return value of calling \code{yaml.load_file} on the
configuration file).}

\item{\code{raw_input_data}}{A data frame that contains all of the input data
(for all periods) for the simulation. The data frame must have a
\code{date} column. If \code{NULL}, input data will taken from daily
files specified in \code{config}. Defaults to \code{NULL}.}

\item{\code{raw_pricing_data}}{A data frame that contains all of the input data
(for all periods) for the simulation. The data frame must have a
\code{date} column. If \code{NULL}, pricing data will taken from daily
files specified in \code{config}. Defaults to \code{NULL}.}

\item{\code{security_reference_data}}{A data frame that contains reference data
on the securities in the simulation, including any categories that are
used in portfolio construction constraints. Note that the simulator
will throw an error if there are input data records for which there is
no entry in the security reference.}

\item{\code{delisting_dates_data}}{A data frame that contains the dates on which
securities are delisted. It must contain two columns: id (character)
and delisting_date (Date). The date in the delisting_date column means
the day on which a stock will be removed from the simulation portfolio,
at the beginning of the day, due to delisting. If \code{NULL},
delisting data will taken from a file specified in \code{config}.
Defaults to \code{NULL}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new \code{Simulation} object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-setVerbose"></a>}}
\if{latex}{\out{\hypertarget{method-setVerbose}{}}}
\subsection{Method \code{setVerbose()}}{
Set the verbose flag to control info output.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Simulation$setVerbose(verbose)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{verbose}}{Logical flag indicating whether to be verbose or not.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-setShinyCallback"></a>}}
\if{latex}{\out{\hypertarget{method-setShinyCallback}{}}}
\subsection{Method \code{setShinyCallback()}}{
Set the callback function for updating progress when running
  a simulation in shiny.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Simulation$setShinyCallback(callback)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{callback}}{A function suitable for updating a shiny Progress object.
It must have two parameters: \code{value}, indicating the progress
amount, and detail, and \code{detail}, a text string for display on the
progress bar.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getSecurityReference"></a>}}
\if{latex}{\out{\hypertarget{method-getSecurityReference}{}}}
\subsection{Method \code{getSecurityReference()}}{
Get security reference information.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Simulation$getSecurityReference()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The security reference data frame for the object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-run"></a>}}
\if{latex}{\out{\hypertarget{method-run}{}}}
\subsection{Method \code{run()}}{
Run the simulation.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Simulation$run()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
An object of class \code{SimResult} that contains the results of the simulation.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getSimDates"></a>}}
\if{latex}{\out{\hypertarget{method-getSimDates}{}}}
\subsection{Method \code{getSimDates()}}{
Get a list of all date for the simulation.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Simulation$getSimDates()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A vector of dates over which the simulation currently iterates: all
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getSimSummary"></a>}}
\if{latex}{\out{\hypertarget{method-getSimSummary}{}}}
\subsection{Method \code{getSimSummary()}}{
Get summary information.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Simulation$getSimSummary()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A data frame that contains all summary data.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getSimDetail"></a>}}
\if{latex}{\out{\hypertarget{method-getSimDetail}{}}}
\subsection{Method \code{getSimDetail()}}{
Get detail information.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Simulation$getSimDetail(
  sim_date = NULL,
  strategy_name = NULL,
  security_id = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sim_date}}{Vector of length 1 of class Date or character that
specifies the period for which to get detail information. If
\code{NULL} then data from all periods is returned. Note that as
opposed to filtering on a date column in the detail data itself, the
period index (i.e., the list element name) is used when extracting data
for a single period. This is the same value that is supplied as the
\code{period} parameter when calling \code{saveSimDetail()}. Defaults
to \code{NULL}.}

\item{\code{strategy_name}}{Character vector of length 1 that specifies the
strategy for which to get detail data. If \code{NULL} data for all
strategies is returned. Defaults to \code{NULL}.}

\item{\code{security_id}}{Character vector of length 1 that specifies the
security for which to get detail data. If \code{NULL} data for all
securities is returned. Defaults to \code{NULL}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data frame that contains detail data.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getPositionSummary"></a>}}
\if{latex}{\out{\hypertarget{method-getPositionSummary}{}}}
\subsection{Method \code{getPositionSummary()}}{
Get summary information by security. This method can be
  used, for example, to calculate the biggest winners and losers over the
  course of the simulation.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Simulation$getPositionSummary(strategy_name = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{strategy_name}}{Character vector of length 1 that specifies the
strategy for which to get detail data. If \code{NULL} data for all
strategies is returned. Defaults to \code{NULL}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data frame of summary information aggregated by security.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getInputStats"></a>}}
\if{latex}{\out{\hypertarget{method-getInputStats}{}}}
\subsection{Method \code{getInputStats()}}{
Get input statistics.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Simulation$getInputStats()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A data frame that contains all input statistics.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getLooseningInfo"></a>}}
\if{latex}{\out{\hypertarget{method-getLooseningInfo}{}}}
\subsection{Method \code{getLooseningInfo()}}{
Get loosening information.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Simulation$getLooseningInfo()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A data frame that contains all loosening information.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getOptimizationSummary"></a>}}
\if{latex}{\out{\hypertarget{method-getOptimizationSummary}{}}}
\subsection{Method \code{getOptimizationSummary()}}{
Get optimization summary information.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Simulation$getOptimizationSummary()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A data frame that contains all optimization summary information.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getExposures"></a>}}
\if{latex}{\out{\hypertarget{method-getExposures}{}}}
\subsection{Method \code{getExposures()}}{
Get exposure information.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Simulation$getExposures()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A data frame that contains all exposure information.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getDelistings"></a>}}
\if{latex}{\out{\hypertarget{method-getDelistings}{}}}
\subsection{Method \code{getDelistings()}}{
Get information on positions removed due to delisting.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Simulation$getDelistings()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A data frame that contains all delisting information.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getSingleStrategySummaryDf"></a>}}
\if{latex}{\out{\hypertarget{method-getSingleStrategySummaryDf}{}}}
\subsection{Method \code{getSingleStrategySummaryDf()}}{
Get summary information for a single strategy suitable for
  plotting input.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Simulation$getSingleStrategySummaryDf(strategy_name, include_zero_row = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{strategy_name}}{Strategy for which to return summary data.}

\item{\code{include_zero_row}}{Logical flag indicatiing whether to prepend a row
to the summary data with starting values at zero. Defaults to \code{TRUE}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data frame that contains summary information for the desired
  strategy, as well as columns for cumulative net and gross total return,
  calculated as pnl divided by ending gross market value.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-plotPerformance"></a>}}
\if{latex}{\out{\hypertarget{method-plotPerformance}{}}}
\subsection{Method \code{plotPerformance()}}{
Plot cumulative gross and net return by date.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Simulation$plotPerformance()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-plotMarketValue"></a>}}
\if{latex}{\out{\hypertarget{method-plotMarketValue}{}}}
\subsection{Method \code{plotMarketValue()}}{
Plot total gross, long, short, and net market value by date.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Simulation$plotMarketValue()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-plotCategoryExposure"></a>}}
\if{latex}{\out{\hypertarget{method-plotCategoryExposure}{}}}
\subsection{Method \code{plotCategoryExposure()}}{
Plot exposure to all levels in a category by date.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Simulation$plotCategoryExposure(in_var)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{in_var}}{Category for which exposures are plotted.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-plotFactorExposure"></a>}}
\if{latex}{\out{\hypertarget{method-plotFactorExposure}{}}}
\subsection{Method \code{plotFactorExposure()}}{
Plot exposure to factors by date.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Simulation$plotFactorExposure(in_var)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{in_var}}{Factors for which exposures are plotted.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-plotNumPositions"></a>}}
\if{latex}{\out{\hypertarget{method-plotNumPositions}{}}}
\subsection{Method \code{plotNumPositions()}}{
Plot number of long and short positions by date.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Simulation$plotNumPositions()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-overallStatsDf"></a>}}
\if{latex}{\out{\hypertarget{method-overallStatsDf}{}}}
\subsection{Method \code{overallStatsDf()}}{
Calculate overall simulation summary statistics, such as
  total P&L, Sharpe, average market values and counts, etc.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Simulation$overallStatsDf()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A data frame that contains summary statistics, suitable for
  reporting.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\if{latex}{\out{\hypertarget{method-print}{}}}
\subsection{Method \code{print()}}{
Print overall simulation statistics.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Simulation$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-writeFeather"></a>}}
\if{latex}{\out{\hypertarget{method-writeFeather}{}}}
\subsection{Method \code{writeFeather()}}{
Write the data in the object to feather files.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Simulation$writeFeather(out_loc)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{out_loc}}{Directory in which output files should be created.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-readFeather"></a>}}
\if{latex}{\out{\hypertarget{method-readFeather}{}}}
\subsection{Method \code{readFeather()}}{
Load files created with \code{writeFeather} into the object.
  Note that because detail data is not re-split by period, it will not be
  possible to use the \code{sim_date} parameter when calling
  \code{getSimDetail} on the populated object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Simulation$readFeather(in_loc)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{in_loc}}{Directory that contains files to be loaded.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Simulation$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
